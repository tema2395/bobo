from aiogram import Router, F
from aiogram.types import Message, URLInputFile
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from fsm import Menu, Order
import keyboards
from pictures import *
from db_function import add_user_to_db, get_user_data

rt1 = Router()


@rt1.message(F.text, Command("start"))
async def start(message: Message, state: FSMContext) -> None:
    'Greetings'
    await message.answer_photo(
        start_photo,
        caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –≥—Ä—É–ø–ø—ã <b>bobolink</b>",
        reply_markup=keyboards.START_KEYS,
    )
    await state.set_state(Menu.start)


@rt1.message(Menu.calc)
async def calc(message: Message, state: FSMContext):
    'Price calculation'
    await message.answer(
        f"üí∞–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ - {(str(int(message.text)*13.5 + 400))} —Ä—É–±(<b>–±–µ–∑ —É—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</b>).\n\n‚ùó<i>–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–∞, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∞ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ</i>",
        reply_markup=keyboards.CALC_KEYS,
    )
    await state.set_state(Menu.end_calc)

    
@rt1.message(Order.fullname)
async def fullname(message: Message, state: FSMContext):
    'Registration'
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û<b>(–∫–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ):</b> –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram\n\n<i>–≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞</i>\n\n<b>–ü—Ä–∏–º–µ—Ä</b>\n<i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á @1234</i>")
    await state.set_state(Order.link)


@rt1.message(Order.link)
async def link(message: Message, state: FSMContext):
    'Product link'
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à —Ç–æ–≤–∞—Ä")
    await state.update_data(fullname = message.text)
    await state.set_state(Order.address)


@rt1.message(Order.address)
async def address(message: Message, state: FSMContext):
    'Clients address'
    await message.answer(
        f"üöö–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ <b>–±–ª–∏–∑–ª–µ–∂–∞—â–µ–≥–æ</b> –°–î–ï–ö–êüöö\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n<i>–≥.–ú–æ—Å–∫–≤–∞, –ú–æ–∂–∞–π—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ 3</i>"
    )
    await state.update_data(link = message.text)
    await state.set_state(Order.size)


@rt1.message(Order.size)
async def item_size(message: Message, state: FSMContext):
    'Product size'
    await message.answer(
        f"–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à —Ä–∞–∑–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n<i>–ï—Å–ª–∏ —ç—Ç–æ –æ–¥–µ–∂–¥–∞, —Ç–æ —Ä–∞–∑–º–µ—Ä —É–∫–∞–∑—ã–≤–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: S,M,L,XL...\n–ï—Å–ª–∏ —ç—Ç–æ –æ–±—É–≤—å, —Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 42.5,43,44,38....</i>"
    )
    await state.update_data(address = message.text)
    await state.set_state(Order.price)
    

@rt1.message(Order.price)
async def price(message: Message, state: FSMContext):
    'Product price'
    await message.answer(f"–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö")
    await state.update_data(size = message.text)
    await state.set_state(Order.end_order)
    

@rt1.message(Order.end_order)
async def add_process(message: Message, state: FSMContext):
    'Adding to the database'
    await state.update_data(price = message.text)
    
    data = await state.get_data()
    fullname = data.get('fullname')
    link = data.get('link')
    address = data.get('address')
    size = data.get('size')
    price = data.get('price')
    
    await add_user_to_db(message.from_user.id, fullname, link, address, size, price)
    await state.clear()
    
    user_data = await get_user_data(message.from_user.id)
    if user_data:
        user_order = f"–í–∞—à–µ –§–ò–û: {user_data['fullname']}\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à —Ç–æ–≤–∞—Ä: {user_data['link']}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {user_data['address']}\n–†–∞–∑–º–µ—Ä –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞: {user_data['size']}\n–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {(user_data['price']*13.5+400)}<i> —Ä—É–±–ª–µ–π</i>\n\n<b>–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ!!</b>"
        await message.answer(user_order, reply_markup=keyboards.ORDER_KEYS)
        await message.bot.send_message(chat_id=750523220, text = user_order)